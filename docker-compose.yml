---

version: '3.8'

services:

  nginx:
    build:
      context: ./
      dockerfile: ./docker/nginx/Dockerfile
    container_name: nginx
    depends_on:
      - appnya
      - pgadmin
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ${APP_PATH}:${DOCUMENT_ROOT}
      - ./docker/nginx/config/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/config/nginx.conf:/etc/nginx/nginx.conf
      # SSL certificates folder (shared with certbot service)
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      # ACME challenge folder (shared with certbot service)
      - ./docker/nginx/acme:/var/www/acme:ro
    networks:
      - appnet

  appnya:
    build:
      context: ./
      dockerfile: ./docker/php/Dockerfile
    container_name: appnya
    volumes:
      - ${APP_PATH}:${DOCUMENT_ROOT}
      - ./docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
    networks:
      - appnet

  postgres:
    build:
      context: ./
      dockerfile: ./docker/postgres/Dockerfile
    container_name: postgres
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./docker/postgres/dumps/:/tmp
    ports:
      - "5432:5432"
    networks:
      - appnet
  
  pgadmin:
    build:
      context: ./
      dockerfile: ./docker/pgadmin4/Dockerfile
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: 5050
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - appnet

  certbot:
    build:
      context: ./docker/nginx/certbot
      dockerfile: Dockerfile
    environment:
      NGINX_SERVICE: reverse-proxy
    volumes:
      # SSL certificates folder
      - ./docker/nginx/ssl:/etc/letsencrypt:rw
      # ACME challenge folder
      - ./docker/nginx/acme:/var/www/acme:rw
      # Docker Unix Socket (allow restarting reverse-proxy service after renewal)
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    restart: unless-stopped

networks:
  appnet:
    name: appnet
    driver: "bridge"

volumes:
  postgres:
    driver: local
  pgadmin:
    driver: local